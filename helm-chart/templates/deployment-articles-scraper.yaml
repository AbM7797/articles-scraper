apiVersion: apps/v1
kind: Deployment
metadata:
  name: articles-scraper
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: articles-scraper
  template:
    metadata:
      labels:
        app: articles-scraper
    spec:
      initContainers:
      - name: wait-for-mysql
        image: busybox:1.35
        command: ['sh', '-c', 'until nc -z mysql.default.svc.cluster.local 3306; do echo "Waiting for MySQL..."; sleep 3; done; echo "MySQL is up!"']
      containers:
      - name: articles-scraper
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.service.port }}
        env:
          - name: DB_PORT
            valueFrom:
              configMapKeyRef:
                name: articles-scraper-config
                key: DB_PORT
          - name: DB_HOST
            valueFrom:
              configMapKeyRef:
                name: articles-scraper-config
                key: DB_HOST
          - name: DB_USERNAME
            valueFrom:
              configMapKeyRef:
                name: articles-scraper-config
                key: DB_USERNAME
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: mysql-secret
                key: MYSQL_PASSWORD
          - name: DB_DATABASE
            valueFrom:
              configMapKeyRef:
                name: articles-scraper-config
                key: DB_DATABASE
          - name: STAGE
            value: prod